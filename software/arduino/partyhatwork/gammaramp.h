#ifndef GAMMARAMP_H
#define GAMMARAMP_H

#include <avr/pgmspace.h>
#include <stdint.h>

// sRGB to linear, overall gamma is approximately 2.2
const uint16_t gammaTable256to4096[256] PROGMEM = {
	0x0000, 0x0001, 0x0002, 0x0004, 0x0005, 0x0006, 0x0007, 0x0009, 0x000a, 0x000b, 0x000c, 0x000e, 0x000f, 0x0010, 0x0012, 0x0014, 
	0x0015, 0x0017, 0x0019, 0x001b, 0x001d, 0x001f, 0x0021, 0x0023, 0x0025, 0x0028, 0x002a, 0x002d, 0x0030, 0x0032, 0x0035, 0x0038, 
	0x003b, 0x003e, 0x0042, 0x0045, 0x0048, 0x004c, 0x004f, 0x0053, 0x0057, 0x005b, 0x005f, 0x0063, 0x0067, 0x006b, 0x0070, 0x0074, 
	0x0079, 0x007e, 0x0083, 0x0088, 0x008d, 0x0092, 0x0097, 0x009c, 0x00a2, 0x00a8, 0x00ad, 0x00b3, 0x00b9, 0x00bf, 0x00c5, 0x00cc, 
	0x00d2, 0x00d8, 0x00df, 0x00e6, 0x00ed, 0x00f4, 0x00fb, 0x0102, 0x0109, 0x0111, 0x0118, 0x0120, 0x0128, 0x0130, 0x0138, 0x0140, 
	0x0149, 0x0151, 0x015a, 0x0162, 0x016b, 0x0174, 0x017d, 0x0186, 0x0190, 0x0199, 0x01a3, 0x01ac, 0x01b6, 0x01c0, 0x01ca, 0x01d5, 
	0x01df, 0x01ea, 0x01f4, 0x01ff, 0x020a, 0x0215, 0x0220, 0x022b, 0x0237, 0x0242, 0x024e, 0x025a, 0x0266, 0x0272, 0x027f, 0x028b, 
	0x0298, 0x02a4, 0x02b1, 0x02be, 0x02cb, 0x02d8, 0x02e6, 0x02f3, 0x0301, 0x030f, 0x031d, 0x032b, 0x0339, 0x0348, 0x0356, 0x0365, 
	0x0374, 0x0383, 0x0392, 0x03a1, 0x03b1, 0x03c0, 0x03d0, 0x03e0, 0x03f0, 0x0400, 0x0411, 0x0421, 0x0432, 0x0443, 0x0454, 0x0465, 
	0x0476, 0x0487, 0x0499, 0x04ab, 0x04bd, 0x04cf, 0x04e1, 0x04f3, 0x0506, 0x0518, 0x052b, 0x053e, 0x0551, 0x0565, 0x0578, 0x058c, 
	0x05a0, 0x05b3, 0x05c8, 0x05dc, 0x05f0, 0x0605, 0x061a, 0x062e, 0x0643, 0x0659, 0x066e, 0x0684, 0x0699, 0x06af, 0x06c5, 0x06db, 
	0x06f2, 0x0708, 0x071f, 0x0736, 0x074d, 0x0764, 0x077c, 0x0793, 0x07ab, 0x07c3, 0x07db, 0x07f3, 0x080b, 0x0824, 0x083d, 0x0855, 
	0x086f, 0x0888, 0x08a1, 0x08bb, 0x08d4, 0x08ee, 0x0908, 0x0923, 0x093d, 0x0958, 0x0973, 0x098e, 0x09a9, 0x09c4, 0x09df, 0x09fb, 
	0x0a17, 0x0a33, 0x0a4f, 0x0a6c, 0x0a88, 0x0aa5, 0x0ac2, 0x0adf, 0x0afc, 0x0b19, 0x0b37, 0x0b55, 0x0b73, 0x0b91, 0x0baf, 0x0bce, 
	0x0bec, 0x0c0b, 0x0c2a, 0x0c4a, 0x0c69, 0x0c89, 0x0ca8, 0x0cc8, 0x0ce8, 0x0d09, 0x0d29, 0x0d4a, 0x0d6b, 0x0d8c, 0x0dad, 0x0dcf, 
	0x0df0, 0x0e12, 0x0e34, 0x0e56, 0x0e79, 0x0e9b, 0x0ebe, 0x0ee1, 0x0f04, 0x0f27, 0x0f4b, 0x0f6e, 0x0f92, 0x0fb6, 0x0fdb, 0x0fff
};

inline uint16_t gamma256to4096(uint8_t val) { return pgm_read_word_near(gammaTable256to4096 + val); }
inline uint16_t gamma256to256(uint8_t val) { return pgm_read_word_near(gammaTable256to4096 + val) >> 4; }

#endif
